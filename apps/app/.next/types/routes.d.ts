// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin" | "/dashboard" | "/dashboard/import" | "/dashboard/integrations" | "/features" | "/forgot-password" | "/insights" | "/integrations" | "/integrations/callback/shopify" | "/login" | "/onboarding" | "/pricing" | "/register" | "/settings/billing"
type AppRouteHandlerRoutes = "/api" | "/api/admin/users" | "/api/admin/users/role" | "/api/analysis/churn-risk" | "/api/analysis/monthly-revenue" | "/api/analysis/revenue-concentration" | "/api/auth/[...nextauth]" | "/api/auth/forgot-password" | "/api/auth/register" | "/api/data/upload" | "/api/integration" | "/api/integration/shopify/connect" | "/api/integration/shopify/sync" | "/api/onboarding" | "/api/stripe/checkout" | "/api/stripe/customer-portal" | "/api/stripe/webhook" | "/api/subscription" | "/api/user/complete-onboarding" | "/api/user/onboarding-status"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/api": {}
  "/api/admin/users": {}
  "/api/admin/users/role": {}
  "/api/analysis/churn-risk": {}
  "/api/analysis/monthly-revenue": {}
  "/api/analysis/revenue-concentration": {}
  "/api/auth/[...nextauth]": { "nextauth": string[]; }
  "/api/auth/forgot-password": {}
  "/api/auth/register": {}
  "/api/data/upload": {}
  "/api/integration": {}
  "/api/integration/shopify/connect": {}
  "/api/integration/shopify/sync": {}
  "/api/onboarding": {}
  "/api/stripe/checkout": {}
  "/api/stripe/customer-portal": {}
  "/api/stripe/webhook": {}
  "/api/subscription": {}
  "/api/user/complete-onboarding": {}
  "/api/user/onboarding-status": {}
  "/dashboard": {}
  "/dashboard/import": {}
  "/dashboard/integrations": {}
  "/features": {}
  "/forgot-password": {}
  "/insights": {}
  "/integrations": {}
  "/integrations/callback/shopify": {}
  "/login": {}
  "/onboarding": {}
  "/pricing": {}
  "/register": {}
  "/settings/billing": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}

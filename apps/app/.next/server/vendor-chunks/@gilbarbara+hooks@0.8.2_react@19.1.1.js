"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@gilbarbara+hooks@0.8.2_react@19.1.1";
exports.ids = ["vendor-chunks/@gilbarbara+hooks@0.8.2_react@19.1.1"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/@gilbarbara+hooks@0.8.2_react@19.1.1/node_modules/@gilbarbara/hooks/dist/index.mjs":
/*!*******************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@gilbarbara+hooks@0.8.2_react@19.1.1/node_modules/@gilbarbara/hooks/dist/index.mjs ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   USE_FETCH_STATUS: () => (/* binding */ USE_FETCH_STATUS),\n/* harmony export */   useClickOutside: () => (/* binding */ useClickOutside),\n/* harmony export */   useDebounce: () => (/* binding */ useDebounce),\n/* harmony export */   useDeepCompareEffect: () => (/* binding */ useDeepCompareEffect),\n/* harmony export */   useEffectOnce: () => (/* binding */ useEffectOnce),\n/* harmony export */   useFetch: () => (/* binding */ useFetch),\n/* harmony export */   useIntersectionObserver: () => (/* binding */ useIntersectionObserver),\n/* harmony export */   useInterval: () => (/* binding */ useInterval),\n/* harmony export */   useIsFirstMount: () => (/* binding */ useIsFirstMount),\n/* harmony export */   useIsMounted: () => (/* binding */ useIsMounted),\n/* harmony export */   useIsomorphicLayoutEffect: () => (/* binding */ useIsomorphicLayoutEffect),\n/* harmony export */   useLatest: () => (/* binding */ useLatest),\n/* harmony export */   useLifecycles: () => (/* binding */ useLifecycles),\n/* harmony export */   useLocalStorage: () => (/* binding */ useLocalStorage),\n/* harmony export */   useLocalStorageState: () => (/* binding */ useLocalStorageState),\n/* harmony export */   useLocation: () => (/* binding */ useLocation),\n/* harmony export */   useMeasure: () => (/* binding */ useMeasure),\n/* harmony export */   useMediaQuery: () => (/* binding */ useMediaQuery),\n/* harmony export */   useMergeRefs: () => (/* binding */ useMergeRefs),\n/* harmony export */   useMount: () => (/* binding */ useMount),\n/* harmony export */   usePrevious: () => (/* binding */ usePrevious),\n/* harmony export */   useRenderCount: () => (/* binding */ useRenderCount),\n/* harmony export */   useResizeObserver: () => (/* binding */ useResizeObserver),\n/* harmony export */   useResponsive: () => (/* binding */ useResponsive),\n/* harmony export */   useScript: () => (/* binding */ useScript),\n/* harmony export */   useSetState: () => (/* binding */ useSetState),\n/* harmony export */   useSingleton: () => (/* binding */ useSingleton),\n/* harmony export */   useStableValue: () => (/* binding */ useStableValue),\n/* harmony export */   useThrottle: () => (/* binding */ useThrottle),\n/* harmony export */   useThrottleValue: () => (/* binding */ useThrottleValue),\n/* harmony export */   useTimeout: () => (/* binding */ useTimeout),\n/* harmony export */   useToggle: () => (/* binding */ useToggle),\n/* harmony export */   useUnmount: () => (/* binding */ useUnmount),\n/* harmony export */   useUpdate: () => (/* binding */ useUpdate),\n/* harmony export */   useUpdateEffect: () => (/* binding */ useUpdateEffect),\n/* harmony export */   useWhyDidYouUpdate: () => (/* binding */ useWhyDidYouUpdate),\n/* harmony export */   useWindowSize: () => (/* binding */ useWindowSize)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/../../node_modules/.pnpm/next@15.5.3_@babel+core@7.28.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @gilbarbara/deep-equal */ \"(ssr)/../../node_modules/.pnpm/@gilbarbara+deep-equal@0.3.1/node_modules/@gilbarbara/deep-equal/dist/index.mjs\");\n// src/useClickOutside.ts\n\n\n// src/useStableValue.ts\n\n\n// src/useDeepCompareEffect.ts\n\n\n\n// src/utils.ts\nfunction canUseDOM() {\n  return !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n}\nfunction getElement(target) {\n  if (!canUseDOM()) {\n    return null;\n  }\n  let targetEl;\n  if (typeof target === \"string\") {\n    targetEl = document.querySelector(target);\n  } else {\n    targetEl = target && \"current\" in target ? target.current : target;\n  }\n  return targetEl;\n}\nfunction isPlainObject(value) {\n  if (Object.prototype.toString.call(value) !== \"[object Object]\") {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(value);\n  return prototype === null || prototype === Object.getPrototypeOf({});\n}\nfunction isPrimitive(value) {\n  return value !== Object(value);\n}\nfunction isString(value) {\n  return typeof value === \"string\";\n}\nfunction isURL(value) {\n  if (!isString(value)) {\n    return false;\n  }\n  try {\n    new URL(value);\n    return true;\n  } catch {\n    return false;\n  }\n}\nfunction noop() {\n  return void 0;\n}\nfunction on(target, ...rest) {\n  if (target && target.addEventListener) {\n    target.addEventListener(...rest);\n  }\n}\nfunction off(target, ...rest) {\n  if (target && target.removeEventListener) {\n    target.removeEventListener(...rest);\n  }\n}\n\n// src/useDeepCompareEffect.ts\nfunction useDeepCompareEffect(effect, dependencies) {\n  if (true) {\n    if (!(dependencies instanceof Array) || !dependencies.length) {\n      console.warn(\n        \"`useDeepCompareEffect` should not be used with no dependencies. Use React.useEffect instead.\"\n      );\n    }\n    if (dependencies.length && dependencies.every(isPrimitive)) {\n      console.warn(\n        \"`useDeepCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.\"\n      );\n    }\n  }\n  const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(void 0);\n  if (!ref.current || !(0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dependencies, ref.current)) {\n    ref.current = dependencies;\n  }\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(effect, ref.current);\n}\n\n// src/useIsFirstMount.ts\n\nfunction useIsFirstMount() {\n  const isFirstMount = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(true);\n  if (isFirstMount.current) {\n    isFirstMount.current = false;\n    return true;\n  }\n  return isFirstMount.current;\n}\n\n// src/useStableValue.ts\nfunction useStableValue(value) {\n  const [stableValue, setStableValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => value);\n  const isFirstMount = useIsFirstMount();\n  useDeepCompareEffect(() => {\n    if (isFirstMount) {\n      return;\n    }\n    setStableValue(() => value);\n  }, [value]);\n  return stableValue;\n}\n\n// src/useClickOutside.ts\nfunction useClickOutside(callback) {\n  const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const stableCallback = useStableValue(callback);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const handleClick = (event) => {\n      if (!ref.current?.contains(event.target)) {\n        stableCallback();\n      }\n    };\n    on(document, \"click\", handleClick);\n    return () => {\n      off(document, \"click\", handleClick);\n    };\n  }, [stableCallback]);\n  return ref;\n}\n\n// src/useDebounce.ts\n\nfunction useDebounce(callback, delayMs = 250, deps = []) {\n  const status = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(\"pending\");\n  const timeout = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  const savedCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(callback);\n  const isFirstMount = useIsFirstMount();\n  const clear = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    status.current = \"cancelled\";\n    timeout.current && clearTimeout(timeout.current);\n  }, []);\n  const set = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    status.current = \"pending\";\n    timeout.current && clearTimeout(timeout.current);\n    timeout.current = setTimeout(() => {\n      status.current = \"completed\";\n      savedCallback.current();\n    }, delayMs);\n  }, [delayMs]);\n  const getStatus = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => status.current, []);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n  useDeepCompareEffect(() => {\n    if (!isFirstMount) {\n      set();\n      return clear;\n    }\n    return void 0;\n  }, [set, clear, deps, delayMs]);\n  return { cancel: clear, getStatus };\n}\n\n// src/useEffectOnce.ts\n\nfunction useEffectOnce(effect) {\n  const destroyFn = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const effectCalled = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n  const effectFn = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(effect);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!effectCalled.current) {\n      destroyFn.current = effectFn.current();\n      effectCalled.current = true;\n    }\n    return () => {\n      if (destroyFn.current) {\n        destroyFn.current();\n        destroyFn.current = null;\n      }\n    };\n  }, []);\n}\n\n// src/useFetch.tsx\n\nvar USE_FETCH_STATUS = {\n  IDLE: \"IDLE\",\n  LOADING: \"LOADING\",\n  SUCCESS: \"SUCCESS\",\n  ERROR: \"ERROR\"\n};\nasync function request(options) {\n  const {\n    body = void 0,\n    headers = {},\n    method = \"GET\",\n    mode = \"cors\",\n    type = \"json\",\n    url = \"\"\n  } = options;\n  const contentTypes = {\n    json: \"application/json\",\n    urlencoded: \"application/x-www-form-urlencoded\"\n  };\n  const params = {\n    body: void 0,\n    cache: \"no-store\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": contentTypes[type],\n      ...headers\n    },\n    method,\n    mode,\n    credentials: void 0\n  };\n  if (body) {\n    params.body = isPlainObject(body) && type === \"json\" ? JSON.stringify(body) : body;\n  }\n  return fetch(url, params).then(async (response) => {\n    const text = await response.text();\n    let content;\n    try {\n      content = JSON.parse(text);\n    } catch {\n      content = text;\n    }\n    if (response.status > 299) {\n      const error = new Error(response.statusText);\n      error.status = response.status;\n      error.response = content;\n      throw error;\n    }\n    return content;\n  });\n}\nfunction useFetch(urlOrOptions) {\n  const isActive = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n  const retryCount = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n  const [{ data, error, status }, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n    data: void 0,\n    error: void 0,\n    status: USE_FETCH_STATUS.IDLE\n  });\n  const {\n    retry = 0,\n    retryDelay = (attempt) => attempt * 1e3,\n    wait = false,\n    ...options\n  } = isURL(urlOrOptions) ? {\n    type: \"json\",\n    url: urlOrOptions\n  } : urlOrOptions;\n  if (!isPlainObject(options) || !isURL(options.url)) {\n    throw new Error(\"Expected an options object or URL\");\n  }\n  const getData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (eraseData) => {\n      setState((s) => ({\n        ...s,\n        data: eraseData ? void 0 : s.data,\n        error: void 0,\n        status: USE_FETCH_STATUS.LOADING\n      }));\n      request(options).then((response) => {\n        if (isActive.current) {\n          setState((s) => ({\n            ...s,\n            data: response,\n            status: USE_FETCH_STATUS.SUCCESS\n          }));\n        }\n      }).catch((responseError) => {\n        if (isActive.current) {\n          setState((s) => ({\n            ...s,\n            error: responseError,\n            status: USE_FETCH_STATUS.ERROR\n          }));\n        }\n        if (retry && retryCount.current < retry) {\n          retryCount.current += 1;\n          setTimeout(\n            getData,\n            typeof retryDelay === \"function\" ? retryDelay(retryCount.current) : retryDelay\n          );\n        }\n      });\n    },\n    [options, retry, retryDelay]\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    isActive.current = true;\n    return () => {\n      isActive.current = false;\n    };\n  }, []);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (status === USE_FETCH_STATUS.IDLE && !wait) {\n      getData();\n    }\n  }, [getData, status, wait]);\n  const isError = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => status === USE_FETCH_STATUS.ERROR, [status]);\n  const isFetched = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    () => [USE_FETCH_STATUS.SUCCESS, USE_FETCH_STATUS.ERROR].includes(status),\n    [status]\n  );\n  const isLoading = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => status === USE_FETCH_STATUS.LOADING, [status]);\n  const isPaused = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => status === USE_FETCH_STATUS.IDLE && wait, [status, wait]);\n  const isSuccess = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => status === USE_FETCH_STATUS.SUCCESS, [status]);\n  const refetch = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((eraseData = false) => getData(eraseData), [getData]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => ({\n      data,\n      error,\n      isError,\n      isFetched,\n      isLoading,\n      isPaused,\n      isSuccess,\n      refetch,\n      status\n    }),\n    [data, error, isError, isFetched, isLoading, isPaused, isSuccess, refetch, status]\n  );\n}\n\n// src/useIntersectionObserver.ts\n\nfunction useIntersectionObserver(target, options) {\n  const { delay = 0, once = false, root = null, rootMargin = \"0%\", threshold = 0 } = options || {};\n  const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();\n  const disabled = value?.isIntersecting && once;\n  const observer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    if (!canUseDOM()) {\n      return {};\n    }\n    return new IntersectionObserver(\n      ([entry]) => {\n        if (delay) {\n          setTimeout(() => setValue(entry), delay);\n          return;\n        }\n        setValue(entry);\n      },\n      { threshold, root, rootMargin }\n    );\n  }, [delay, root, rootMargin, threshold]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!canUseDOM() || !(observer instanceof IntersectionObserver) || disabled) {\n      return () => void 0;\n    }\n    const element = getElement(target);\n    if (!element) {\n      return () => void 0;\n    }\n    observer.observe(element);\n    return () => observer.disconnect();\n  }, [target, root, rootMargin, disabled, observer]);\n  return value;\n}\n\n// src/useInterval.ts\n\nfunction useInterval(callback, delayMs = 100) {\n  const savedCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(callback);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    savedCallback.current = callback;\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (delayMs !== null) {\n      const interval = setInterval(() => savedCallback.current(), delayMs);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n    return void 0;\n  }, [delayMs]);\n}\n\n// src/useIsMounted.ts\n\nfunction useIsMounted() {\n  const isMounted = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => isMounted.current, []);\n}\n\n// src/useIsomorphicLayoutEffect.ts\n\nvar useIsomorphicLayoutEffect = canUseDOM() ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;\n\n// src/useLatest.ts\n\nfunction useLatest(value) {\n  const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(value);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\n// src/useLifecycles.ts\n\nfunction useLifecycles(mount, unmount) {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    mount();\n    return unmount;\n  }, []);\n}\n\n// src/useLocalStorage.ts\n\nfunction useLocalStorageHook(key, initialValue, options) {\n  if (!key) {\n    throw new Error('useLocalStorage: \"key\" is required');\n  }\n  const deserializer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => options?.raw ? (value) => value : options?.deserializer ?? JSON.parse,\n    [options]\n  );\n  const serializer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => options?.raw ? String : options?.serializer ?? JSON.stringify,\n    [options]\n  );\n  const initializer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)((k) => {\n    try {\n      const localStorageValue = localStorage.getItem(k);\n      if (localStorageValue !== null) {\n        return deserializer(localStorageValue);\n      }\n      initialValue && localStorage.setItem(k, serializer(initialValue));\n      return initialValue;\n    } catch {\n      return initialValue;\n    }\n  });\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => initializer.current(key));\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => setState(initializer.current(key)), [key]);\n  const set = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (patch) => {\n      try {\n        const newState = patch instanceof Function ? patch(state) : patch;\n        if (typeof newState === \"undefined\") {\n          return;\n        }\n        let value;\n        if (options) {\n          if (options.raw) {\n            value = typeof newState === \"string\" ? newState : JSON.stringify(newState);\n          } else if (options?.serializer) {\n            value = options.serializer(newState);\n          } else {\n            value = JSON.stringify(newState);\n          }\n        } else {\n          value = JSON.stringify(newState);\n        }\n        localStorage.setItem(key, value);\n        setState(deserializer(value));\n      } catch {\n      }\n    },\n    [deserializer, key, options, state]\n  );\n  const remove = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    try {\n      localStorage.removeItem(key);\n      setState(void 0);\n    } catch {\n    }\n  }, [key, setState]);\n  return [state, set, remove];\n}\nfunction useLocalStorageSSR(_key, initialValue, _options) {\n  return [initialValue, noop, noop];\n}\nvar useLocalStorage = canUseDOM() ? useLocalStorageHook : useLocalStorageSSR;\n\n// src/useSetState.ts\n\nfunction useSetState(initialState = {}) {\n  const [state, set] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialState);\n  const setState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((patch) => {\n    set((previousState) => ({\n      ...previousState,\n      ...patch instanceof Function ? patch(previousState) : patch\n    }));\n  }, []);\n  return [state, setState];\n}\n\n// src/useLocalStorageState.ts\nfunction getState(initialState, savedState, shouldOverride, restoreProperties) {\n  if (shouldOverride) {\n    const initialStateKeys = Object.keys(initialState);\n    const savedStateKeys = savedState ? Object.keys(savedState) : [];\n    const restorePropertiesKeys = restoreProperties ? Object.keys(restoreProperties) : [];\n    if (![...initialStateKeys, ...restorePropertiesKeys].every((k) => savedStateKeys.includes(k))) {\n      return { ...initialState, ...restoreProperties };\n    }\n    return { ...savedState, ...restoreProperties };\n  }\n  return { ...savedState, ...restoreProperties };\n}\nfunction useLocalStorageState(key, initialState, options) {\n  const { overrideDivergentSavedState = false, resetProperties } = options || {};\n  const [value, setValue, remove] = useLocalStorage(key, initialState);\n  const [state, setState] = useSetState(\n    getState(initialState, value, overrideDivergentSavedState, resetProperties)\n  );\n  useDeepCompareEffect(() => {\n    setValue(state);\n  }, [setValue, state]);\n  return [state, setState, remove];\n}\n\n// src/useLocation.ts\nfunction useLocation() {\n  const { hash, host, hostname, href, origin, pathname, port, protocol, search } = window.location;\n  const query = search ? search.slice(1).split(\"&\").reduce((acc, pair) => {\n    const [key, value] = pair.split(\"=\");\n    if (key && value) {\n      acc[key] = value;\n    }\n    return acc;\n  }, {}) : {};\n  return { hash, host, hostname, href, origin, pathname, port, protocol, query, search };\n}\n\n// src/useMeasure.tsx\n\n\n// src/defaults.ts\nvar defaultElementDimensions = {\n  absoluteHeight: 0,\n  absoluteWidth: 0,\n  bottom: 0,\n  height: 0,\n  left: 0,\n  right: 0,\n  top: 0,\n  width: 0,\n  x: 0,\n  y: 0\n};\n\n// src/useResizeObserver.ts\n\nfunction useResizeObserver(target, debounce = 0) {\n  const [element, setElement] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(getElement(target));\n  const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();\n  const timeoutRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const isFirstCall = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(true);\n  const observer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    if (!canUseDOM()) {\n      return {};\n    }\n    return new window.ResizeObserver((entries) => {\n      if (debounce && !isFirstCall.current) {\n        if (timeoutRef.current) {\n          window.clearTimeout(timeoutRef.current);\n        }\n        timeoutRef.current = window.setTimeout(() => {\n          setValue(entries[0]);\n        }, debounce);\n        return;\n      }\n      setValue(entries[0]);\n      isFirstCall.current = false;\n    });\n  }, [debounce]);\n  useIsomorphicLayoutEffect(() => {\n    setElement(getElement(target));\n  }, [target]);\n  useIsomorphicLayoutEffect(() => {\n    if (!canUseDOM() || !(observer instanceof ResizeObserver)) {\n      return () => void 0;\n    }\n    if (!element) {\n      return () => void 0;\n    }\n    observer.observe(element);\n    return () => {\n      observer.disconnect();\n    };\n  }, [element, observer]);\n  return value;\n}\n\n// src/useMeasure.tsx\nfunction parseFloatValue(value) {\n  const parsed = parseFloat(value);\n  return Number.isNaN(parsed) ? 0 : parsed;\n}\nfunction getElementMeasure(element) {\n  if (!canUseDOM() || !element) {\n    return defaultElementDimensions;\n  }\n  const { bottom, height, left, right, top, width, x, y } = element.getBoundingClientRect();\n  const {\n    borderBottom,\n    borderLeft,\n    borderRight,\n    borderTop,\n    paddingBottom,\n    paddingLeft,\n    paddingRight,\n    paddingTop\n  } = getComputedStyle(element);\n  return {\n    absoluteHeight: height - parseFloatValue(paddingTop) - parseFloatValue(paddingBottom) - parseFloatValue(borderTop) - parseFloatValue(borderBottom),\n    absoluteWidth: width - parseFloatValue(paddingLeft) - parseFloatValue(paddingRight) - parseFloatValue(borderLeft) - parseFloatValue(borderRight),\n    bottom,\n    height,\n    left,\n    right,\n    top,\n    width,\n    x,\n    y\n  };\n}\nfunction useMeasure(target, debounce = 0) {\n  const [element, setElement] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(getElement(target));\n  const [dimensions, setDimensions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(getElementMeasure(element));\n  const entry = useResizeObserver(element, debounce);\n  useIsomorphicLayoutEffect(() => {\n    const nextElement = getElement(target);\n    setElement(nextElement);\n    setDimensions(getElementMeasure(nextElement));\n  }, [target]);\n  useIsomorphicLayoutEffect(() => {\n    if (!entry) {\n      return;\n    }\n    const { bottom, height, left, right, top, width, x, y } = entry.contentRect;\n    const { blockSize, inlineSize } = entry.borderBoxSize[0];\n    setDimensions({\n      absoluteHeight: blockSize,\n      absoluteWidth: inlineSize,\n      bottom,\n      height,\n      left,\n      right,\n      top,\n      width,\n      x,\n      y\n    });\n  }, [entry]);\n  return dimensions;\n}\n\n// src/useMediaQuery.ts\n\nfunction useMediaQuery(input) {\n  const getMatches = (query) => {\n    if (!canUseDOM()) {\n      return false;\n    }\n    return window.matchMedia(query).matches;\n  };\n  const [matches, setMatches] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(getMatches(input));\n  function handleChange() {\n    setMatches(getMatches(input));\n  }\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const matchMedia = window.matchMedia(input);\n    handleChange();\n    try {\n      matchMedia.addEventListener(\"change\", handleChange);\n    } catch {\n      matchMedia.addListener(handleChange);\n    }\n    return () => {\n      try {\n        matchMedia.removeEventListener(\"change\", handleChange);\n      } catch {\n        matchMedia.removeListener(handleChange);\n      }\n    };\n  }, [input]);\n  return matches;\n}\n\n// src/useMergeRefs.tsx\n\nfunction useMergeRefs(...refs) {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (value) => {\n      for (const ref of refs) {\n        if (typeof ref === \"function\") {\n          ref(value);\n        } else if (ref && typeof ref === \"object\") {\n          ref.current = value;\n        }\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    refs\n  );\n}\n\n// src/useMount.ts\nfunction useMount(fn) {\n  useEffectOnce(() => {\n    fn();\n  });\n}\n\n// src/usePrevious.ts\n\nfunction usePrevious(state) {\n  const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    ref.current = state;\n  });\n  return ref.current;\n}\n\n// src/useRenderCount.tsx\n\nfunction useRenderCount(name) {\n  const count = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(1);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    count.current += 1;\n  });\n  console.log(\n    `%c${name || \"RenderCount\"}: %c${count.current}`,\n    \"font-size: 14px;  font-weight: bold;\",\n    \"color: #999; font-size: 14px;\"\n  );\n  return count.current;\n}\n\n// src/useResponsive.tsx\n\nvar defaultBreakpoints = { xs: 0, sm: 400, md: 768, lg: 1024, xl: 1280 };\nfunction useResponsiveBase(breakpoints, initialWidth = Infinity, initialHeight = Infinity) {\n  const sizes = Object.entries(breakpoints).sort(([, aSize], [, bSize]) => bSize - aSize);\n  const smallestBreakpoint = sizes[sizes.length - 1];\n  if (smallestBreakpoint[1] !== 0) {\n    if (true) {\n      console.warn(`The \"${smallestBreakpoint[0]}\" breakpoint should be 0`);\n    }\n    smallestBreakpoint[1] = 0;\n  }\n  const getScreen = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    const height = canUseDOM() ? window.innerHeight : initialHeight;\n    const width = canUseDOM() ? window.innerWidth : initialWidth;\n    const size = sizes.find(([, s]) => s <= width) || sizes[0];\n    const orientation = width > height ? \"landscape\" : \"portrait\";\n    return {\n      between(min, max, andOrientation) {\n        return width >= breakpoints[min] && width < breakpoints[max] && (!andOrientation || andOrientation === orientation);\n      },\n      min(breakpoint, andOrientation) {\n        return width >= breakpoints[breakpoint] && (!andOrientation || andOrientation === orientation);\n      },\n      max(breakpoint, andOrientation) {\n        return width < breakpoints[breakpoint] && (!andOrientation || andOrientation === orientation);\n      },\n      orientation,\n      size: size[0]\n    };\n  }, [breakpoints, initialHeight, initialWidth, sizes]);\n  const [screen, setScreen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(getScreen());\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const onResize = () => {\n      const current = getScreen();\n      if (current.size !== screen.size || current.orientation !== screen.orientation) {\n        setScreen(current);\n      }\n    };\n    on(window, \"resize\", onResize);\n    return () => {\n      off(window, \"resize\", onResize);\n    };\n  }, [getScreen, screen, setScreen]);\n  return screen;\n}\nfunction useResponsive(breakpoints, initialWidth, initialHeight) {\n  return useResponsiveBase(breakpoints || defaultBreakpoints, initialWidth, initialHeight);\n}\n\n// src/useScript.tsx\n\nfunction useScript(src, idOrOptions = {}) {\n  const options = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => isString(idOrOptions) ? { id: idOrOptions } : idOrOptions,\n    [idOrOptions]\n  );\n  const script = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n    loaded: false,\n    error: false\n  });\n  const onLoad = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    setState({\n      loaded: true,\n      error: false\n    });\n  }, []);\n  const onError = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    if (script.current) {\n      script.current.remove();\n    }\n    setState({\n      loaded: false,\n      error: true\n    });\n  }, []);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(\n    () => {\n      if (!canUseDOM() || script.current) {\n        return void 0;\n      }\n      const element = document.createElement(\"script\");\n      element.async = options.async ?? true;\n      element.defer = options.defer ?? false;\n      element.type = options.type || \"text/javascript\";\n      element.id = options.id || src;\n      element.src = src;\n      script.current = element;\n      const { current } = script;\n      on(current, \"load\", onLoad);\n      on(current, \"error\", onError);\n      document.body.appendChild(current);\n      return () => {\n        off(current, \"load\", onLoad);\n        off(current, \"error\", onError);\n      };\n    },\n    [onError, onLoad, options, src]\n    // Only re-run effect if script src changes\n  );\n  return [state.loaded, state.error];\n}\n\n// src/useSingleton.tsx\n\nfunction useSingleton(callback) {\n  const hasBeenCalled = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n  if (hasBeenCalled.current) {\n    return;\n  }\n  callback();\n  hasBeenCalled.current = true;\n}\n\n// src/useTimeout.ts\n\nfunction useTimeout(callback, delayMs = 0) {\n  const status = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(\"pending\");\n  const timeout = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  const savedCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(callback);\n  const clear = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    status.current = \"cancelled\";\n    timeout.current && clearTimeout(timeout.current);\n  }, []);\n  const set = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    status.current = \"pending\";\n    timeout.current && clearTimeout(timeout.current);\n    timeout.current = setTimeout(() => {\n      status.current = \"completed\";\n      savedCallback.current();\n    }, delayMs);\n  }, [delayMs]);\n  const getStatus = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => status.current, []);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    set();\n    return clear;\n  }, [set, clear]);\n  return { cancel: clear, getStatus, reset: set };\n}\n\n// src/useThrottle.ts\n\n\n// src/useUnmount.ts\nfunction useUnmount(fn) {\n  const unmountFn = useLatest(fn);\n  useEffectOnce(() => () => unmountFn.current());\n}\n\n// src/useThrottle.ts\nfunction useThrottle(callback, delayMs = 500, trailing = false) {\n  const [now, setNow] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const callbackRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(callback);\n  const hasPendingCall = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n  const timer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    callbackRef.current = callback;\n  }, [callback]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!now) {\n      return;\n    }\n    if (!timer.current) {\n      callbackRef.current();\n      const timerCallback = () => {\n        if (hasPendingCall.current) {\n          hasPendingCall.current = false;\n          if (trailing) {\n            callbackRef.current();\n          }\n          timer.current = void 0;\n        } else {\n          timer.current = void 0;\n        }\n      };\n      timer.current = window.setTimeout(timerCallback, delayMs);\n    } else {\n      hasPendingCall.current = true;\n    }\n  }, [delayMs, now, trailing]);\n  useUnmount(() => {\n    window.clearTimeout(timer.current);\n    timer.current = void 0;\n  });\n  return () => setNow(Date.now());\n}\n\n// src/useThrottleValue.ts\n\nfunction useThrottleValue(value, delayMs) {\n  const [throttledValue, setThrottledValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(value);\n  const hasNextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n  const nextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const timer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!timer.current) {\n      setThrottledValue(value);\n      const timeoutCallback = () => {\n        if (hasNextValue.current) {\n          hasNextValue.current = false;\n          setThrottledValue(nextValue.current);\n          timer.current = window.setTimeout(timeoutCallback, delayMs);\n        } else {\n          timer.current = void 0;\n        }\n      };\n      timer.current = window.setTimeout(timeoutCallback, delayMs);\n    } else {\n      hasNextValue.current = true;\n      nextValue.current = value;\n    }\n  }, [delayMs, value]);\n  useUnmount(() => {\n    window.clearTimeout(timer.current);\n    timer.current = void 0;\n  });\n  return throttledValue;\n}\n\n// src/useToggle.ts\n\nfunction useToggle(initialValue = true) {\n  const [value, toggle] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(\n    (state, nextValue) => typeof nextValue === \"boolean\" ? nextValue : !state,\n    initialValue\n  );\n  const toggleOn = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => toggle(true), []);\n  const toggleOff = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => toggle(false), []);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => [value, { toggle, toggleOn, toggleOff }], [value, toggleOn, toggleOff]);\n}\n\n// src/useUpdate.ts\n\nvar updateReducer = (number) => (number + 1) % 1e6;\nfunction useUpdate() {\n  const [, update] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(updateReducer, 0);\n  return update;\n}\n\n// src/useUpdateEffect.ts\n\nfunction useUpdateEffect(effect, deps) {\n  const isFirstMount = useIsFirstMount();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!isFirstMount) {\n      return effect();\n    }\n    return void 0;\n  }, deps);\n}\n\n// src/useWhyDidYouUpdate.tsx\n\nfunction useWhyDidYouUpdate(props, nameOrOptions = {}) {\n  const [changes, setChanges] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});\n  const previousProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  const { name, skipLog = false } = isString(nameOrOptions) ? { name: nameOrOptions } : nameOrOptions;\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const { current } = previousProps;\n    setChanges({});\n    if (current) {\n      const allKeys = Object.keys({ ...current, ...props });\n      const changesObject = {};\n      allKeys.forEach((key) => {\n        if (current[key] !== props[key]) {\n          changesObject[key] = {\n            from: current[key],\n            to: props[key]\n          };\n        }\n      });\n      if (Object.keys(changesObject).length) {\n        setChanges(changesObject);\n        if (!skipLog) {\n          const nameToken = name ? `: ${name}` : \"\";\n          console.log(`[why-did-you-update${nameToken}]`, changesObject);\n        }\n      }\n    }\n    previousProps.current = props;\n  }, [name, props, skipLog]);\n  return Object.keys(changes).length ? changes : false;\n}\n\n// src/useWindowSize.ts\n\nfunction useWindowSize(debounce = 0) {\n  const [size, setSize] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n    height: canUseDOM() ? window.innerHeight : 0,\n    width: canUseDOM() ? window.innerWidth : 0\n  });\n  const timeoutRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n  const handleResize = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(() => {\n    window.clearTimeout(timeoutRef.current);\n    timeoutRef.current = window.setTimeout(() => {\n      setSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }, debounce);\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!canUseDOM()) {\n      return () => void 0;\n    }\n    const getSize = handleResize.current;\n    setSize({\n      height: window.innerHeight,\n      width: window.innerWidth\n    });\n    on(window, \"resize\", getSize);\n    return () => {\n      off(window, \"resize\", getSize);\n    };\n  }, []);\n  return size;\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@gilbarbara+hooks@0.8.2_react@19.1.1/node_modules/@gilbarbara/hooks/dist/index.mjs\n");

/***/ })

};
;